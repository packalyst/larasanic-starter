# ============================================================================
# Framework Environment Configuration Template
# ============================================================================
# Copy this file to .env and configure for your environment
#
# Usage:
#   cp .env.template .env
#   # Edit .env with your values
#   # Run: python main.py
# ============================================================================

# ============================================================================
# APPLICATION
# ============================================================================

# Application name displayed in logs and error pages
APP_NAME="Framework App"

# Environment: local, staging, production
# Affects log levels: production=WARNING, staging=INFO, development=DEBUG
APP_ENV=local

# Debug mode: true|false
# Enables detailed error pages, console logging, auto-reload
APP_DEBUG=true

# Server host and port
APP_HOST=0.0.0.0
APP_PORT=8000

# Application URL (used for generating URLs)
APP_URL=http://localhost:8000

#Enable package discovery in app
APP_PACKAGE_DISCOVERY=false

# Use blueprint routing system: true|false
# Enables automatic route discovery from routes/ directory
USE_BLUEPRINT_ROUTING=true

# Timezone (e.g., UTC, America/New_York, Europe/London)
TIMEZONE=UTC

# ============================================================================
# CACHE
# ============================================================================

# Cache driver: file, redis
# file - Disk-based cache (1-5ms read/write)
# redis - In-memory cache (0.1-0.5ms read/write) - 10-50x faster!
CACHE_DRIVER=file

# Redis URL (if using redis driver)
REDIS_URL=redis://localhost:6379/0

# Redis URL for sessions (separate database for session storage)
# Uses DB 1 to separate session data from cache data
REDIS_SESSION_URL=redis://localhost:6379/1

# ============================================================================
# DATABASE
# ============================================================================

# Database connection URL
# SQLite: sqlite:///path/to/database.sqlite3 (or leave empty for default: storage/database/database.sqlite3)
# PostgreSQL: postgres://user:password@host:port/database
# MySQL: mysql://user:password@host:port/database
DATABASE_URL=

# ============================================================================
# AUTHENTICATION & JWT
# ============================================================================

# JWT key name (used for key file names in storage/keys/)
JWT_KEY_NAME=jwt

# Access token TTL in seconds (default: 900 = 15 minutes)
ACCESS_TOKEN_TTL_SECONDS=900

# Refresh token TTL in seconds (default: 2592000 = 30 days)
REFRESH_TOKEN_TTL_SECONDS=2592000

# Bcrypt password hashing rounds (must be 4-31)
# Higher = more secure but slower. Rounds: 4 = ~1ms, 6 = ~5ms, 8 = ~20ms, 10 = ~80ms, 12 = ~330ms
# Development: 6-8 (fast), Production: 12 (secure)
BCRYPT_ROUNDS=6

# ============================================================================
# SESSION
# ============================================================================

# Session driver: file, cookie, redis
SESSION_DRIVER=cookie

# Session lifetime in seconds (default: 7200 = 2 hours)
SESSION_LIFETIME=7200

# Session cookie name
SESSION_COOKIE=framework_session

# Session cookie domain (leave empty for automatic)
SESSION_DOMAIN=

# Use secure cookies (requires HTTPS)
SESSION_SECURE_COOKIE=false

# ============================================================================
# SECURITY - CORS
# ============================================================================

# Enable CORS: true|false
CORS_ENABLED=true

# Allowed origins (comma-separated, or * for all)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000

# ============================================================================
# SECURITY - CSRF
# ============================================================================

# Enable CSRF protection: true|false
CSRF_ENABLED=false

# CSRF secret key (generate with: python -c "import secrets; print(secrets.token_hex(32))")
CSRF_SECRET=

# ============================================================================
# SECURITY - HEADERS
# ============================================================================

# X-Frame-Options: DENY, SAMEORIGIN, or ALLOW-FROM uri
X_FRAME_OPTIONS=DENY

# X-Content-Type-Options: nosniff
X_CONTENT_TYPE_OPTIONS=nosniff

# X-XSS-Protection: 1; mode=block
X_XSS_PROTECTION=1; mode=block

# Content Security Policy
CSP_ENABLED=true
# Custom CSP policy (leave empty for secure defaults)
CSP_POLICY=

# HTTP Strict Transport Security (HSTS) - requires HTTPS
HSTS_ENABLED=false
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=false

# Referrer-Policy
REFERRER_POLICY=strict-origin-when-cross-origin

# Permissions-Policy (leave empty for secure defaults)
PERMISSIONS_POLICY=

# ============================================================================
# RATE LIMITING
# ============================================================================

# Default rate limit (requests per window)
RATE_LIMIT_DEFAULT=100

# Rate limit window in seconds
RATE_LIMIT_WINDOW=60

# ============================================================================
# COMPRESSION & OPTIMIZATION
# ============================================================================

# Enable response compression: true|false
COMPRESSION_ENABLED=true

# Minimum response size to compress (bytes)
COMPRESSION_MIN_SIZE=1024

# Compression level (1-9, higher = more compression but slower)
COMPRESSION_LEVEL=6

# Minify HTML responses: true|false
MINIFY_HTML=true

# ============================================================================
# LOGGING
# ============================================================================

# Enable security event logging: true|false
SECURITY_LOGGING_ENABLED=true

# ============================================================================
# WEBSOCKET
# ============================================================================

# Enable WebSocket server: true|false
WS_ENABLED=true

# WebSocket endpoint path
WS_PATH=/ws/live

# WebSocket ping interval in seconds
WS_PING_INTERVAL=20

# WebSocket ping timeout in seconds
WS_PING_TIMEOUT=10

# WebSocket close timeout in seconds
WS_CLOSE_TIMEOUT=10

# ============================================================================
# TEMPLATE ENGINE (BLADE)
# ============================================================================

# Enable Blade template caching: true|false
# Caching improves performance by storing compiled templates
BLADE_CACHE_ENABLED=false

# Blade cache storage type: disk|memory
# disk - Persistent cache stored on filesystem
# memory - In-memory cache (faster but not persistent)
BLADE_CACHE_STORAGE=disk

# Maximum number of templates to cache
BLADE_CACHE_MAX_SIZE=1000

# Cache TTL in seconds (how long cached templates remain valid)
BLADE_CACHE_TTL=3600

# Track file modification time: true|false
# Automatically invalidate cache when template files change
BLADE_TRACK_MTIME=true

# Template file extension (default: .html)
BLADE_FILE_EXTENSION=.html

# Allow Python code blocks in templates: true|false
# Security: Only enable if you trust template authors
BLADE_ALLOW_PYTHON=false

# Enable SPA (Single Page Application) mode: true|false
# Enables optimized rendering for SPAs with AJAX navigation
BLADE_SPA_ENABLED=true

# SPA base layout template name (without extension)
# This layout wraps all SPA content
BLADE_SPA_LAYOUT=base

# SPA content variable name
# Variable name used to pass initial content to layout
BLADE_SPA_CONTENT_VAR=initial_content

# SPA initial partial variable name
# Used for server-side rendering of initial route
BLADE_SPA_INITIAL_PATH=initial_partial

# Error template prefix
# Error templates are loaded from: resources/views/{prefix}/{code}.html
BLADE_ERROR_PREFIX=errors
